name: Reusable Widget Build and Deploy CI

permissions:
  contents: write
  id-token: write

on:
  workflow_call:
    inputs:
      node-version:
        description: "Node.js version to use"
        required: false
        type: string
        default: "22"
      base-branch:
        description: "The base branch to commit/tag back to"
        required: false
        type: string
        default: "main"
    secrets:
      PRIVATE_KEY_FOR_1FE:
        required: true
      PRIVATE_KEY_FOR_WIDGET_BASE_CONFIG:
        required: true
      AKAMAI_NS_SSH_PRIVATE_KEY:
        required: true
      AZURE_APP_CONFIG_CONNECTION_STRING:
        required: true
      GITHUB_TOKEN:
        required: true

jobs:
  build:
    name: Build and Versioning
    runs-on: ubuntu-latest
    outputs:
      widgetId: ${{ steps.call_build_composite.outputs.widgetId }}
      nextVersion: ${{ steps.call_build_composite.outputs.nextVersion }}
    steps:
      - name: Call Widget Build Composite Action
        id: call_build_composite
        uses: docusign/1fe-ci-cd/.github/actions/widget-build@main
        with:
          node-version: ${{ inputs.node-version }}
          base-branch: ${{ inputs.base-branch }}
          private-key-for-1fe: ${{ secrets.PRIVATE_KEY_FOR_1FE }}
          private-key-for-widget-base-config: ${{ secrets.PRIVATE_KEY_FOR_WIDGET_BASE_CONFIG }}

  setup:
    name: Setup (Yarn, Node)
    runs-on: ubuntu-latest
    needs: build
    outputs:
      nextVersion: ${{ needs.build.outputs.nextVersion }}
    steps:
      - name: Install Deps via Composite Setup Action
        uses: docusign/1fe-ci-cd/.github/actions/widget-test-setup@main
        with:
          node-version: ${{ inputs.node-version }}
          PRIVATE_KEY_FOR_1FE: ${{ secrets.PRIVATE_KEY_FOR_1FE }}
          PRIVATE_KEY_FOR_WIDGET_BASE_CONFIG: ${{ secrets.PRIVATE_KEY_FOR_WIDGET_BASE_CONFIG }}

  lint:
    name: Run Linting
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Lint Source Code
        run: yarn lint

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Run Unit Tests
        run: yarn test

  e2e-tests:
    name: Run Playwright Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Run Playwright
        run: |
          echo "Running Playwright for version ${{ needs.setup.outputs.nextVersion }}"
          yarn test:e2e

  upload-integration:
    name: Upload to Akamai (Integration)
    runs-on: ubuntu-latest
    needs: build
    if: github.ref_name == inputs.base-branch
    steps:
      - name: Call Akamai Upload Composite Action
        uses: docusign/1fe-ci-cd/.github/actions/widget-upload-akamai@main
        with:
          widgetId: ${{ needs.build.outputs.widgetId }}
          nextVersion: ${{ needs.build.outputs.nextVersion }}
          akamai-env-path: "integration"
          akamai-ns-ssh-private-key: ${{ secrets.AKAMAI_NS_SSH_PRIVATE_KEY }}

  commit-tag-push:
    name: Commit, Tag, and Push (Git Ops)
    runs-on: ubuntu-latest
    needs: build
    if: github.ref_name == inputs.base-branch
    steps:
      - name: Call Git Operations Composite Action
        uses: docusign/1fe-ci-cd/.github/actions/git-ops@main
        with:
          widget-id: ${{ needs.build.outputs.widgetId }}
          next-version: ${{ needs.build.outputs.nextVersion }}
          base-branch: ${{ inputs.base-branch }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  release-integration:
    name: Release to Integration
    runs-on: ubuntu-latest
    needs: [build, lint, unit-tests, e2e-tests, upload-integration, commit-tag-push]
    if: github.ref_name == inputs.base-branch
    steps:
      - name: Update Azure AppConfig (Integration)
        uses: docusign/1fe-ci-cd/.github/actions/update-azure-config@main
        with:
          environment: integration
          widgetId: ${{ needs.build.outputs.widgetId }}
          nextVersion: ${{ needs.build.outputs.nextVersion }}
          azure-app-config-connection-string: ${{ secrets.AZURE_APP_CONFIG_CONNECTION_STRING }}

  upload-production:
    name: Upload to Akamai (Production)
    runs-on: ubuntu-latest
    needs: [build, release-integration]
    if: github.ref_name == inputs.base-branch
    steps:
      - name: Upload to Production CDN
        uses: docusign/1fe-ci-cd/.github/actions/widget-upload-akamai@main
        with:
          widgetId: ${{ needs.build.outputs.widgetId }}
          nextVersion: ${{ needs.build.outputs.nextVersion }}
          akamai-env-path: "production"
          akamai-ns-ssh-private-key: ${{ secrets.AKAMAI_NS_SSH_PRIVATE_KEY }}

  test-production:
    name: Test Production
    runs-on: ubuntu-latest
    needs: upload-production
    if: github.ref_name == inputs.base-branch
    steps:
      - name: Run Smoke Tests on Production
        run: echo "Running production smoke tests..."

  approve-production-release:
    name: Approve Production Release
    runs-on: ubuntu-latest
    needs: test-production
    if: github.ref_name == inputs.base-branch
    environment: production-release
    steps:
      - run: echo "Production release approved."

  release-production:
    name: Release to Production
    runs-on: ubuntu-latest
    needs: [build, approve-production-release]
    if: github.ref_name == inputs.base-branch
    steps:
      - name: Update Azure AppConfig (Production)
        uses: docusign/1fe-ci-cd/.github/actions/update-azure-config@main
        with:
          environment: production
          widgetId: ${{ needs.build.outputs.widgetId }}
          nextVersion: ${{ needs.build.outputs.nextVersion }}
          azure-app-config-connection-string: ${{ secrets.AZURE_APP_CONFIG_CONNECTION_STRING }}
