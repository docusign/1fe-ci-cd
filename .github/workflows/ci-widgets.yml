# docusign/1fe-ci-cd/.github/workflows/reusable-build-deploy-ci.yml
name: Reusable Widget Build and Deploy CI
permissions:
  contents: write # Ensure this top-level permission is present for GITHUB_TOKEN
  id-token: write
on:
  workflow_call:
    inputs:
      node-version:
        description: "Node.js version to use"
        required: false
        type: string
        default: "22"
      base-branch:
        description: "The base branch to commit/tag back to"
        required: false
        type: string
        default: "main"
    secrets:
      PRIVATE_KEY_FOR_1FE:
        required: true
      PRIVATE_KEY_FOR_WIDGET_BASE_CONFIG:
        required: true
      AKAMAI_NS_SSH_PRIVATE_KEY:
        required: true
      AZURE_APP_CONFIG_CONNECTION_STRING:
        required: true

jobs:
  build:
    uses: ./.github/workflows/reusable-widget-build.yml # Level 3
    with:
      node-version: ${{ inputs.node-version }}
      base-branch: ${{ inputs.base-branch }}
    secrets:
      PRIVATE_KEY_FOR_1FE: ${{ secrets.PRIVATE_KEY_FOR_1FE }}
      PRIVATE_KEY_FOR_WIDGET_BASE_CONFIG: ${{ secrets.PRIVATE_KEY_FOR_WIDGET_BASE_CONFIG }}

  tests:
    uses: ./.github/workflows/reusable-widget-tests.yml # Level 3
    needs: build
    with:
      node-version: ${{ inputs.node-version }}
      nextVersion: ${{ needs.build.outputs.nextVersion }}
    secrets:
      PRIVATE_KEY_FOR_1FE: ${{ secrets.PRIVATE_KEY_FOR_1FE }}
      PRIVATE_KEY_FOR_WIDGET_BASE_CONFIG: ${{ secrets.PRIVATE_KEY_FOR_WIDGET_BASE_CONFIG }}

  upload-integration:
    name: Upload to Akamai (Integration)
    runs-on: ubuntu-latest # This job needs a runner
    needs: build # Needs build outputs and artifact
    if: github.ref_name == inputs.base-branch
    steps: # <--- THIS JOB NOW HAS STEPS TO CALL THE COMPOSITE ACTION
      - name: Call Akamai Upload Composite Action
        uses: docusign/1fe-ci-cd/.github/actions/widget-upload-akamai@main
        with:
          widgetId: ${{ needs.build.outputs.widgetId }}
          nextVersion: ${{ needs.build.outputs.nextVersion }}
          akamai-env-path: "integration"
          akamai-ns-ssh-private-key: ${{ secrets.AKAMAI_NS_SSH_PRIVATE_KEY }}

  commit-tag-push:
    name: Commit, Tag, and Push (Git Ops)
    runs-on: ubuntu-latest # This job needs a runner
    needs: build # Needs build outputs for versioning
    if: github.ref_name == inputs.base-branch # Only run on base branch
    steps: # <--- THIS JOB NOW HAS STEPS TO CALL THE COMPOSITE ACTION
      - name: Call Git Operations Composite Action
        uses: docusign/1fe-ci-cd/.github/actions/git-ops@main # <--- Call the new composite action
        with:
          widget-id: ${{ needs.build.outputs.widgetId }}
          next-version: ${{ needs.build.outputs.nextVersion }}
          base-branch: ${{ inputs.base-branch }}
          github-token: ${{ secrets.GITHUB_TOKEN }} # <--- Pass GITHUB_TOKEN as an input

  release-integration:
    name: Release to Integration
    needs: [build, tests, upload-integration, commit-tag-push]
    if: github.ref_name == inputs.base-branch
    uses: ./.github/workflows/reusable-update-azure-config.yml # Level 3
    with:
      environment: integration
      widgetId: ${{ needs.build.outputs.widgetId }}
      nextVersion: ${{ needs.build.outputs.nextVersion }}
    secrets:
      AZURE_APP_CONFIG_CONNECTION_STRING: ${{ secrets.AZURE_APP_CONFIG_CONNECTION_STRING }}

  upload-production:
    name: Upload to Akamai (Production)
    runs-on: ubuntu-latest
    needs: [build, release-integration]
    if: github.ref_name == inputs.base-branch
    steps:
      - name: Call Akamai Upload Composite Action
        uses: docusign/1fe-ci-cd/.github/actions/widget-upload-akamai@main
        with:
          widgetId: ${{ needs.build.outputs.widgetId }}
          nextVersion: ${{ needs.build.outputs.nextVersion }}
          akamai-env-path: "production"
          akamai-ns-ssh-private-key: ${{ secrets.AKAMAI_NS_SSH_PRIVATE_KEY }}

  test-production:
    name: Test Production
    runs-on: ubuntu-latest
    needs: upload-production
    if: github.ref_name == inputs.base-branch
    steps:
      - name: Run production smoke tests
        run: echo "Running post-upload tests on production..."

  approve-production-release:
    name: Approve Production Release
    runs-on: ubuntu-latest
    needs: test-production
    if: github.ref_name == inputs.base-branch
    environment: production-release
    steps:
      - run: echo "Production release approved."

  release-production:
    name: Release to Production
    needs: [build, approve-production-release]
    if: github.ref_name == inputs.base-branch
    uses: ./.github/workflows/reusable-update-azure-config.yml # Level 3
    with:
      environment: production
      widgetId: ${{ needs.build.outputs.widgetId }}
      nextVersion: ${{ needs.build.outputs.nextVersion }}
    secrets:
      AZURE_APP_CONFIG_CONNECTION_STRING: ${{ secrets.AZURE_APP_CONFIG_CONNECTION_STRING }}