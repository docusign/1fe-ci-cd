# File: docusign/1fe-ci-cd/.github/workflows/ci-widgets.yml
name: Reusable Minimal Widget CI

permissions:
  id-token: write
  contents: read

on:
  workflow_call:
    inputs:
      node-version:
        description: "Node.js version to use"
        required: false
        type: string
        default: "22"
    secrets:
      PRIVATE_KEY_FOR_1FE: # TODO remove this once the 1fe repository is made public
        description: "SSH private key for accessing docusign/1fe repository"
        required: true
      PRIVATE_KEY_FOR_WIDGET_BASE_CONFIG: # TODO remove this once the widget base config is made public
        description: "SSH private key for accessing docusign/1fe-sample-widget-base-config repository"
        required: true
      AKAMAI_NS_SSH_PRIVATE_KEY:
        description: "SSH private key for Akamai NetStorage upload, sourced from Organization Secrets"
        required: true
      AZURE_APP_CONFIG_CONNECTION_STRING:
        description: "Azure App Configuration connection string, sourced from Organization Secrets"
        required: true
      AZURE_STORAGE_SAS_TOKEN:
        description: "Azure Storage SAS token for widget upload, sourced from Organization Secrets"
        required: true

jobs:
  build-and-upload:
    name: Build and Upload
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Caller's Code
        uses: actions/checkout@v4

      - name: Set up dependency SSH keys
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: |
            ${{ secrets.PRIVATE_KEY_FOR_1FE }}
            ${{ secrets.PRIVATE_KEY_FOR_WIDGET_BASE_CONFIG }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: "yarn"

      - name: Install Dependencies
        run: |
          yarn install --no-immutable

      - name: Build the Widget
        run: |
          yarn build:widget

      - name: Local package version update
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            npm version prepatch --no-git-tag-version --preid "${GITHUB_SHA::7}"
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            npm version patch --no-git-tag-version
          fi

      - name: Set config env variables
        run: |
          echo "widgetId=$(npm pkg get name | tr -d '"')" >> $GITHUB_ENV
          echo "nextVersion=$(npm pkg get version | tr -d '"')" >> $GITHUB_ENV

      - name: Upload widget to Storage
        uses: azure/cli@v2
        with:
          inlineScript: |
            az storage blob upload-batch \
              --source "${{ github.workspace }}/dist" \
              --destination "widgets/integration/${{ env.widgetId }}/${{ env.nextVersion }}" \
              --sas-token "${{ secrets.AZURE_STORAGE_SAS_TOKEN }}" \
              --account-name "1festarter"

  validate:
    name: Validate
    runs-on: ubuntu-latest
    needs: build-and-upload
    steps:
      - name: Checkout Caller's Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: "yarn"

      - name: Install Dependencies
        run: |
          yarn install --no-immutable

      - name: Lint Test
        run: |
          echo "this is the lint test step"

      - name: Unit Test
        run: |
          echo "INFO: Running unit tests with yarn test..."
          if yarn run | grep -qE '^test '; then
            yarn test
          else
            echo "INFO: No test script found in package.json, skipping unit tests."
          fi

  post-validation:
    name: Post Validation
    runs-on: ubuntu-latest
    needs: build-and-upload
    steps:
      - name: Checkout Caller's Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: "yarn"

      - name: Install Dependencies
        run: |
          yarn install --no-immutable

      - name: Contract Test
        run: |
          echo "this is the contract test step"

      - name: Local package version update
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            npm version prepatch --no-git-tag-version --preid "${GITHUB_SHA::7}"
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            npm version patch --no-git-tag-version
          fi

      - name: Set config env variables
        run: |
          echo "widgetId=$(npm pkg get name | tr -d '"')" >> $GITHUB_ENV
          echo "nextVersion=$(npm pkg get version | tr -d '"')" >> $GITHUB_ENV

      - name: Update Azure App Configuration
        uses: azure/cli@v2
        with:
          inlineScript: |
            az appconfig kv set \
              --key "${{ env.widgetId }}" \
              --value "$(jq -n -r '{ widgetId: "${{ env.widgetId }}", version: "${{ env.nextVersion }}"}')" \
              --content-type application/json \
              --yes \
              --connection-string "${{ secrets.AZURE_APP_CONFIG_CONNECTION_STRING }}"

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: build-and-upload
    steps:
      - name: Checkout Caller's Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          registry-url: https://registry.npmjs.org/
          cache: "yarn"

      - name: Install Dependencies
        run: |
          yarn install --no-immutable

      - name: Is widget on environment step
        run: |
          echo "this is the is widget on environment step"
          echo "Widget is not yet deployed on the environment."

      - name: E2E Playwright Test
        run: |
          echo "this is the Playwright test step"
