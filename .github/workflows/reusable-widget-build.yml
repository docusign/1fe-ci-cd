# docusign/1fe-ci-cd/.github/workflows/reusable-build-deploy-ci.yml
name: Reusable Widget Build and Deploy CI
permissions:
  contents: write
  id-token: write
on:
  workflow_call:
    inputs:
      node-version:
        description: "Node.js version to use"
        required: false
        type: string
        default: "22"
      base-branch:
        description: "The base branch to commit/tag back to"
        required: false
        type: string
        default: "main"
    secrets:
      PRIVATE_KEY_FOR_1FE:
        required: true
      PRIVATE_KEY_FOR_WIDGET_BASE_CONFIG:
        required: true
      AKAMAI_NS_SSH_PRIVATE_KEY:
        required: true
      AZURE_APP_CONFIG_CONNECTION_STRING:
        required: true

jobs:
  build:
    uses: ./.github/workflows/reusable-widget-build.yml # Call the reusable build workflow
    with:
      node-version: ${{ inputs.node-version }}
      base-branch: ${{ inputs.base-branch }}
    secrets:
      PRIVATE_KEY_FOR_1FE: ${{ secrets.PRIVATE_KEY_FOR_1FE }}
      PRIVATE_KEY_FOR_WIDGET_BASE_CONFIG: ${{ secrets.PRIVATE_KEY_FOR_WIDGET_BASE_CONFIG }}
      # AKAMAI_NS_SSH_PRIVATE_KEY is not directly used in build, but can be passed through if needed for dependencies

  tests:
    uses: ./.github/workflows/reusable-widget-tests.yml # Call the reusable tests workflow
    needs: build # Depends on build completing
    with:
      node-version: ${{ inputs.node-version }}
      nextVersion: ${{ needs.build.outputs.nextVersion }} # Pass version for Playwright
    secrets:
      PRIVATE_KEY_FOR_1FE: ${{ secrets.PRIVATE_KEY_FOR_1FE }}
      PRIVATE_KEY_FOR_WIDGET_BASE_CONFIG: ${{ secrets.PRIVATE_KEY_FOR_WIDGET_BASE_CONFIG }}

  upload-integration:
    uses: ./.github/workflows/reusable-widget-upload-akamai.yml # Call reusable Akamai upload for integration
    needs: build # Needs build outputs and artifact
    if: github.ref_name == inputs.base-branch
    with:
      widgetId: ${{ needs.build.outputs.widgetId }}
      nextVersion: ${{ needs.build.outputs.nextVersion }}
      akamai-env-path: "integration" # Specify integration environment
    secrets:
      AKAMAI_NS_SSH_PRIVATE_KEY: ${{ secrets.AKAMAI_NS_SSH_PRIVATE_KEY }}

  commit-tag-push:
    uses: ./.github/workflows/reusable-git-ops.yml # Call reusable git ops workflow
    needs: build # Needs build outputs for versioning
    if: github.ref_name == inputs.base-branch # Only run on base branch
    with:
      widget-id: ${{ needs.build.outputs.widgetId }}
      next-version: ${{ needs.build.outputs.nextVersion }}
      base-branch: ${{ inputs.base-branch }}

  release-integration:
    name: Release to Integration
    # Depends on build, tests, integration upload, and git ops completing
    needs: [build, tests, upload-integration, commit-tag-push]
    if: github.ref_name == inputs.base-branch
    uses: ./.github/workflows/reusable-update-azure-config.yml # Call reusable Azure update
    with:
      environment: integration
      widgetId: ${{ needs.build.outputs.widgetId }}
      nextVersion: ${{ needs.build.outputs.nextVersion }}
    secrets:
      AZURE_APP_CONFIG_CONNECTION_STRING: ${{ secrets.AZURE_APP_CONFIG_CONNECTION_STRING }}

  upload-production:
    uses: ./.github/workflows/reusable-widget-upload-akamai.yml # Call reusable Akamai upload for production
    needs: [build, release-integration] # Depends on build and integration release
    if: github.ref_name == inputs.base-branch
    with:
      widgetId: ${{ needs.build.outputs.widgetId }}
      nextVersion: ${{ needs.build.outputs.nextVersion }}
      akamai-env-path: "production" # Specify production environment
    secrets:
      AKAMAI_NS_SSH_PRIVATE_KEY: ${{ secrets.AKAMAI_NS_SSH_PRIVATE_KEY }}

  test-production:
    name: Test Production
    runs-on: ubuntu-latest
    needs: upload-production # Depends on production upload being complete
    if: github.ref_name == inputs.base-branch
    steps:
      - name: Run production smoke tests
        run: echo "Running post-upload tests on production..."

  approve-production-release:
    name: Approve Production Release
    runs-on: ubuntu-latest
    needs: test-production
    if: github.ref_name == inputs.base-branch
    environment: production-release # This will trigger a manual approval
    steps:
      - run: echo "Production release approved."

  release-production:
    name: Release to Production
    needs: [build, approve-production-release] # Depends on build and approval
    if: github.ref_name == inputs.base-branch
    uses: ./.github/workflows/reusable-update-azure-config.yml # Call reusable Azure update
    with:
      environment: production
      widgetId: ${{ needs.build.outputs.widgetId }}
      nextVersion: ${{ needs.build.outputs.nextVersion }}
    secrets:
      AZURE_APP_CONFIG_CONNECTION_STRING: ${{ secrets.AZURE_APP_CONFIG_CONNECTION_STRING }}