# docusign/1fe-ci-cd/.github/workflows/reusable-git-ops.yml
name: Reusable - Git Operations (Commit, Tag, Push)
permissions:
  contents: write # Essential for writing to repo
on:
  workflow_call:
    inputs:
      widget-id:
        description: "The widget ID from build"
        required: true
        type: string
      next-version:
        description: "The next version to commit and tag"
        required: true
        type: string
      base-branch:
        description: "The base branch to commit/tag back to"
        required: true
        type: string
    secrets:
      GITHUB_TOKEN:
        required: true # GITHUB_TOKEN is needed for pushing

jobs:
  commit-tag-push:
    name: Commit, Tag, and Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Caller's Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for amending and tagging
      - name: Configure Git User
        run: |
          git config user.email "DevOpsTeam@docusign.com"
          git config user.name "svc-git-devops"
      - name: Set Git Remote URL with GITHUB_TOKEN
        run: git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
      - name: Prepare Commit Message and Tag
        env:
          VERSION: ${{ inputs.next-version }}
          WIDGET_NAME: ${{ inputs.widget-id }}
          INTEGRATION_CDN_URL: "https://1fe-a.akamaihd.net/integration/widgets" # Hardcoded, consider making this an input if environments change
          PREVIEW_URL: "https://demo.1fe.com/bathtub" # Hardcoded, consider making this an input
        run: |
          BUNDLE_URL="${INTEGRATION_CDN_URL}/${WIDGET_NAME}/${VERSION}/js/1fe-bundle.js"
          COMMIT_MSG="Bundle will be uploaded to: ${BUNDLE_URL} / Preview here: ${PREVIEW_URL}?widgetUrl=${BUNDLE_URL}&fixPreview=true [skip ci]"
          echo "COMMIT_MSG=${COMMIT_MSG}" >> $GITHUB_ENV
          echo "TAG_VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Stage package.json
        run: git add package.json
      - name: Ammend Commit
        run: git commit --amend --no-verify -m "${{ env.COMMIT_MSG }}" || echo "Nothing to amend"
      - name: Fetch and Force Push to Remote
        run: |
          set -euo pipefail
          git fetch origin ${{ inputs.base-branch }}
          git reset --hard HEAD # Force reset local branch to HEAD (pipeline commit)
          git push origin HEAD:${{ inputs.base-branch }} --force-with-lease --no-verify # Push pipeline commit to remote
      - name: Create and Push Tag
        run: |
          set -euo pipefail
          if git tag -a "${{ env.TAG_VERSION }}" -m "Release: ${{ env.TAG_VERSION }}" 2>/dev/null; then
            echo "Tag created"
            git push origin "${{ env.TAG_VERSION }}" --force
          else
            echo "Tag ${{ env.TAG_VERSION }} already exists. Skipping tag push..."
          fi